<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiaoda.edu.mapper.LogOperationMapper" >
  <resultMap id="BaseResultMap" type="com.jiaoda.edu.domain.LogOperation" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="machine_ip" property="machineIp" jdbcType="VARCHAR" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
    <result column="operation_name" property="operationName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jiaoda.edu.domain.LogOperation" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, app_id, create_time, user_id, user_name, machine_ip, module_name, operation_name
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_operation
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from log_operation
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  
    <delete id="delLog" parameterType="java.lang.Integer" >
     <if test="delId != null" >
        <if test="delId == 1" >
          delete from log_operation where create_time &lt;(select DATE_ADD(now(),INTERVAL -1 MONTH));
        </if>
        <if test="delId == 2" >
        	 delete from log_operation where log_id not in (select log_id from (select log_id from log_operation order by create_time DESC limit 0,100) as a );
        </if>
         <if test="delId == 3" >
        	 TRUNCATE log_operation;
        </if>
     </if>
  </delete>
  <insert id="insert" parameterType="com.jiaoda.edu.domain.LogOperation" >
    insert into log_operation (log_id, app_id, create_time, 
      user_id, user_name, machine_ip, 
      module_name, operation_name, message
      )
    values (#{logId,jdbcType=BIGINT}, #{appId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{machineIp,jdbcType=VARCHAR}, 
      #{moduleName,jdbcType=VARCHAR}, #{operationName,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jiaoda.edu.domain.LogOperation" >
    insert into log_operation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="machineIp != null" >
        machine_ip,
      </if>
      <if test="moduleName != null" >
        module_name,
      </if>
      <if test="operationName != null" >
        operation_name,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="machineIp != null" >
        #{machineIp,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null" >
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiaoda.edu.domain.LogOperation" >
    update log_operation
    <set >
      <if test="appId != null" >
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="machineIp != null" >
        machine_ip = #{machineIp,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null" >
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jiaoda.edu.domain.LogOperation" >
    update log_operation
    set app_id = #{appId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      machine_ip = #{machineIp,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      operation_name = #{operationName,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiaoda.edu.domain.LogOperation" >
    update log_operation
    set app_id = #{appId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      machine_ip = #{machineIp,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      operation_name = #{operationName,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
   <select id="getCount" resultType="java.lang.Integer">
    select count(*) from log_operation
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_operation
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_operation 
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>
  </select>
</mapper>