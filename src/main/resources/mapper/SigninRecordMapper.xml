<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxhalo.lmb.mapper.SigninRecordMapper" >
  <resultMap id="BaseResultMap" type="com.sxhalo.lmb.domain.SigninRecord" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <id column="signin_date" property="signinDate" jdbcType="DATE" />
    <result column="signin_datetime" property="signinDatetime" jdbcType="TIMESTAMP" />
    <result column="signin_days" property="signinDays" jdbcType="INTEGER" />
    <association property="user" column="user_id" select="com.sxhalo.lmb.mapper.UserInfoMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, signin_date, signin_datetime, signin_days
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.sxhalo.lmb.domain.SigninRecordKey" >
    select 
    <include refid="Base_Column_List" />
    from signin_record
    where user_id = #{userId,jdbcType=INTEGER}
      and signin_date = #{signinDate,jdbcType=DATE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sxhalo.lmb.domain.SigninRecordKey" >
    delete from signin_record
    where user_id = #{userId,jdbcType=INTEGER}
      and signin_date = #{signinDate,jdbcType=DATE}
  </delete>
  <insert id="insert" parameterType="com.sxhalo.lmb.domain.SigninRecord" >
    insert into signin_record (user_id, signin_date, signin_datetime, 
      signin_days)
    values (#{userId,jdbcType=INTEGER}, #{signinDate,jdbcType=DATE}, #{signinDatetime,jdbcType=TIMESTAMP}, 
      #{signinDays,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sxhalo.lmb.domain.SigninRecord" >
    insert into signin_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="signinDate != null" >
        signin_date,
      </if>
      <if test="signinDatetime != null" >
        signin_datetime,
      </if>
      <if test="signinDays != null" >
        signin_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="signinDate != null" >
        #{signinDate,jdbcType=DATE},
      </if>
      <if test="signinDatetime != null" >
        #{signinDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="signinDays != null" >
        #{signinDays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxhalo.lmb.domain.SigninRecord" >
    update signin_record
    <set >
      <if test="signinDatetime != null" >
        signin_datetime = #{signinDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="signinDays != null" >
        signin_days = #{signinDays,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
      and signin_date = #{signinDate,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxhalo.lmb.domain.SigninRecord" >
    update signin_record
    set signin_datetime = #{signinDatetime,jdbcType=TIMESTAMP},
      signin_days = #{signinDays,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
      and signin_date = #{signinDate,jdbcType=DATE}
  </update>
  
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from signin_record left join user_copy user on user.user_id=signin_record.user_id
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from signin_record
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select *
    from signin_record left join user_copy user on user.user_id=signin_record.user_id
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>
  </select>
</mapper>