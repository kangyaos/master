<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxhalo.lmb.mapper.SysDicCodeMapper" >
  <resultMap id="BaseResultMap" type="com.sxhalo.lmb.domain.SysDicCode" >
    <id column="dict_code" property="dictCode" jdbcType="VARCHAR" />
    <id column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="dict_parent" property="dictParent" jdbcType="VARCHAR" />
    <result column="dict_value" property="dictValue" jdbcType="VARCHAR" />
    <result column="dict_description" property="dictDescription" jdbcType="VARCHAR" />
    <result column="pic_code" property="picCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    dict_code, type_id, dict_parent, dict_value, dict_description, pic_code, create_time, 
    update_time, delete_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.sxhalo.lmb.domain.SysDicCodeKey" >
    select 
    <include refid="Base_Column_List" />
    from sys_dic_code
    where dict_code = #{dictCode,jdbcType=VARCHAR}
      and type_id = #{typeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sxhalo.lmb.domain.SysDicCodeKey" >
    delete from sys_dic_code
    where dict_code = #{dictCode,jdbcType=VARCHAR}
      and type_id = #{typeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxhalo.lmb.domain.SysDicCode" >
    insert into sys_dic_code (dict_code, type_id, dict_parent, 
      dict_value, dict_description, pic_code, 
      create_time, update_time, delete_flag
      )
    values (#{dictCode,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{dictParent,jdbcType=VARCHAR}, 
      #{dictValue,jdbcType=VARCHAR}, #{dictDescription,jdbcType=VARCHAR}, #{picCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxhalo.lmb.domain.SysDicCode" >
    insert into sys_dic_code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictCode != null" >
        dict_code,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="dictParent != null" >
        dict_parent,
      </if>
      <if test="dictValue != null" >
        dict_value,
      </if>
      <if test="dictDescription != null" >
        dict_description,
      </if>
      <if test="picCode != null" >
        pic_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictCode != null" >
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dictParent != null" >
        #{dictParent,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictDescription != null" >
        #{dictDescription,jdbcType=VARCHAR},
      </if>
      <if test="picCode != null" >
        #{picCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxhalo.lmb.domain.SysDicCode" >
    update sys_dic_code
    <set >
      <if test="dictParent != null" >
        dict_parent = #{dictParent,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictDescription != null" >
        dict_description = #{dictDescription,jdbcType=VARCHAR},
      </if>
      <if test="picCode != null" >
        pic_code = #{picCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where dict_code = #{dictCode,jdbcType=VARCHAR}
      and type_id = #{typeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxhalo.lmb.domain.SysDicCode" >
    update sys_dic_code
    set dict_parent = #{dictParent,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_description = #{dictDescription,jdbcType=VARCHAR},
      pic_code = #{picCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where dict_code = #{dictCode,jdbcType=VARCHAR}
      and type_id = #{typeId,jdbcType=INTEGER}
  </update>
  
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from sys_dic_code
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_dic_code
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_dic_code
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>     
  </select>
</mapper>