<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiaoda.edu.mapper.LogExceptionMapper" >
  <resultMap id="BaseResultMap" type="com.jiaoda.edu.domain.LogException" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="app_name" property="appName" jdbcType="VARCHAR" />
    <result column="app_version" property="appVersion" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="machine_ip" property="machineIp" jdbcType="VARCHAR" />
    <result column="machine_code" property="machineCode" jdbcType="VARCHAR" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
    <result column="operation_name" property="operationName" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
    <result column="device_brand" property="deviceBrand" jdbcType="VARCHAR" />
    <result column="device_version" property="deviceVersion" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from log_exception
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_exception
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_exception
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>
  </select>
  
  <sql id="Base_Column_List" >
    log_id, create_time, app_name, app_version, user_id, user_name, machine_ip, machine_code, 
    module_name, operation_name, message, device_type, device_brand, device_version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from log_exception
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from log_exception
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jiaoda.edu.domain.LogException" >
    insert into log_exception (log_id, create_time, app_name, 
      app_version, user_id, user_name, 
      machine_ip, machine_code, module_name, 
      operation_name, message, device_type, 
      device_brand, device_version)
    values (#{logId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{appName,jdbcType=VARCHAR}, 
      #{appVersion,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{machineIp,jdbcType=VARCHAR}, #{machineCode,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR}, 
      #{operationName,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, 
      #{deviceBrand,jdbcType=VARCHAR}, #{deviceVersion,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiaoda.edu.domain.LogException" >
    insert into log_exception
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="appName != null" >
        app_name,
      </if>
      <if test="appVersion != null" >
        app_version,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="machineIp != null" >
        machine_ip,
      </if>
      <if test="machineCode != null" >
        machine_code,
      </if>
      <if test="moduleName != null" >
        module_name,
      </if>
      <if test="operationName != null" >
        operation_name,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceBrand != null" >
        device_brand,
      </if>
      <if test="deviceVersion != null" >
        device_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appName != null" >
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="appVersion != null" >
        #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="machineIp != null" >
        #{machineIp,jdbcType=VARCHAR},
      </if>
      <if test="machineCode != null" >
        #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null" >
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceBrand != null" >
        #{deviceBrand,jdbcType=VARCHAR},
      </if>
      <if test="deviceVersion != null" >
        #{deviceVersion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiaoda.edu.domain.LogException" >
    update log_exception
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appName != null" >
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="appVersion != null" >
        app_version = #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="machineIp != null" >
        machine_ip = #{machineIp,jdbcType=VARCHAR},
      </if>
      <if test="machineCode != null" >
        machine_code = #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null" >
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceBrand != null" >
        device_brand = #{deviceBrand,jdbcType=VARCHAR},
      </if>
      <if test="deviceVersion != null" >
        device_version = #{deviceVersion,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiaoda.edu.domain.LogException" >
    update log_exception
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      app_name = #{appName,jdbcType=VARCHAR},
      app_version = #{appVersion,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      machine_ip = #{machineIp,jdbcType=VARCHAR},
      machine_code = #{machineCode,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      operation_name = #{operationName,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=VARCHAR},
      device_brand = #{deviceBrand,jdbcType=VARCHAR},
      device_version = #{deviceVersion,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>