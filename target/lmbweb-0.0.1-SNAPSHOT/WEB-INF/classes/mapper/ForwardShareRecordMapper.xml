<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxhalo.lmb.mapper.ForwardShareRecordMapper" >
  <resultMap id="BaseResultMap" type="com.sxhalo.lmb.domain.ForwardShareRecord" >
    <id column="machine_code" property="machineCode" jdbcType="VARCHAR" />
    <id column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="share_type" property="shareType" jdbcType="INTEGER" />
    <result column="share_brokerage" property="shareBrokerage" jdbcType="INTEGER" />
    <result column="receive_brokerage" property="receiveBrokerage" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    machine_code, create_time, user_id, share_type, share_brokerage, receive_brokerage
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.sxhalo.lmb.domain.ForwardShareRecordKey" >
    select 
    <include refid="Base_Column_List" />
    from forward_share_record
    where machine_code = #{machineCode,jdbcType=VARCHAR}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sxhalo.lmb.domain.ForwardShareRecordKey" >
    delete from forward_share_record
    where machine_code = #{machineCode,jdbcType=VARCHAR}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </delete>
  <insert id="insert" parameterType="com.sxhalo.lmb.domain.ForwardShareRecord" >
    insert into forward_share_record (machine_code, create_time, user_id, 
      share_type, share_brokerage, receive_brokerage
      )
    values (#{machineCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{shareType,jdbcType=INTEGER}, #{shareBrokerage,jdbcType=INTEGER}, #{receiveBrokerage,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxhalo.lmb.domain.ForwardShareRecord" >
    insert into forward_share_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="machineCode != null" >
        machine_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shareType != null" >
        share_type,
      </if>
      <if test="shareBrokerage != null" >
        share_brokerage,
      </if>
      <if test="receiveBrokerage != null" >
        receive_brokerage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="machineCode != null" >
        #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shareType != null" >
        #{shareType,jdbcType=INTEGER},
      </if>
      <if test="shareBrokerage != null" >
        #{shareBrokerage,jdbcType=INTEGER},
      </if>
      <if test="receiveBrokerage != null" >
        #{receiveBrokerage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxhalo.lmb.domain.ForwardShareRecord" >
    update forward_share_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shareType != null" >
        share_type = #{shareType,jdbcType=INTEGER},
      </if>
      <if test="shareBrokerage != null" >
        share_brokerage = #{shareBrokerage,jdbcType=INTEGER},
      </if>
      <if test="receiveBrokerage != null" >
        receive_brokerage = #{receiveBrokerage,jdbcType=INTEGER},
      </if>
    </set>
    where machine_code = #{machineCode,jdbcType=VARCHAR}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxhalo.lmb.domain.ForwardShareRecord" >
    update forward_share_record
    set user_id = #{userId,jdbcType=INTEGER},
      share_type = #{shareType,jdbcType=INTEGER},
      share_brokerage = #{shareBrokerage,jdbcType=INTEGER},
      receive_brokerage = #{receiveBrokerage,jdbcType=INTEGER}
    where machine_code = #{machineCode,jdbcType=VARCHAR}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </update>
  
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from forward_share_record
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from forward_share_record
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from forward_share_record
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>
  </select>
</mapper>