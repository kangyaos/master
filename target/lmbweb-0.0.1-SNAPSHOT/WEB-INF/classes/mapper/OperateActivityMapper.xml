<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxhalo.lmb.mapper.OperateActivityMapper" >
  <resultMap id="BaseResultMap" type="com.sxhalo.lmb.domain.OperateActivity" >
    <id column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="active_name" property="activeName" jdbcType="VARCHAR" />
    <result column="pic_code" property="picCode" jdbcType="VARCHAR" />
    <result column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="access_condition" property="accessCondition" jdbcType="INTEGER" />
    <result column="open_state" property="openState" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="app_type" property="appType" jdbcType="INTEGER" />
    <result column="send_url" property="sendUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="founder" property="founder" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sxhalo.lmb.domain.OperateActivity" extends="BaseResultMap" >
    <result column="active_content" property="activeContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    activity_id, active_name, pic_code, pic_id, sort, access_condition, open_state, start_time, 
    end_time, app_type, send_url, create_time, founder, update_time, delete_flag
  </sql>
  <sql id="Blob_Column_List" >
    active_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operate_activity
    where activity_id = #{activityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operate_activity
    where activity_id = #{activityId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxhalo.lmb.domain.OperateActivity" >
    insert into operate_activity (activity_id, active_name, pic_code, 
      pic_id, sort, access_condition, 
      open_state, start_time, end_time, 
      app_type, send_url, create_time, 
      founder, update_time, delete_flag, 
      active_content)
    values (#{activityId,jdbcType=INTEGER}, #{activeName,jdbcType=VARCHAR}, #{picCode,jdbcType=VARCHAR}, 
      #{picId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{accessCondition,jdbcType=INTEGER}, 
      #{openState,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{appType,jdbcType=INTEGER}, #{sendUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{founder,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}, 
      #{activeContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sxhalo.lmb.domain.OperateActivity" >
    insert into operate_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="activeName != null" >
        active_name,
      </if>
      <if test="picCode != null" >
        pic_code,
      </if>
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="accessCondition != null" >
        access_condition,
      </if>
      <if test="openState != null" >
        open_state,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="appType != null" >
        app_type,
      </if>
      <if test="sendUrl != null" >
        send_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="founder != null" >
        founder,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="activeContent != null" >
        active_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="activeName != null" >
        #{activeName,jdbcType=VARCHAR},
      </if>
      <if test="picCode != null" >
        #{picCode,jdbcType=VARCHAR},
      </if>
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="accessCondition != null" >
        #{accessCondition,jdbcType=INTEGER},
      </if>
      <if test="openState != null" >
        #{openState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appType != null" >
        #{appType,jdbcType=INTEGER},
      </if>
      <if test="sendUrl != null" >
        #{sendUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null" >
        #{founder,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="activeContent != null" >
        #{activeContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxhalo.lmb.domain.OperateActivity" >
    update operate_activity
    <set >
      <if test="activeName != null" >
        active_name = #{activeName,jdbcType=VARCHAR},
      </if>
      <if test="picCode != null" >
        pic_code = #{picCode,jdbcType=VARCHAR},
      </if>
      <if test="picId != null" >
        pic_id = #{picId,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="accessCondition != null" >
        access_condition = #{accessCondition,jdbcType=INTEGER},
      </if>
      <if test="openState != null" >
        open_state = #{openState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appType != null" >
        app_type = #{appType,jdbcType=INTEGER},
      </if>
      <if test="sendUrl != null" >
        send_url = #{sendUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null" >
        founder = #{founder,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="activeContent != null" >
        active_content = #{activeContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where activity_id = #{activityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sxhalo.lmb.domain.OperateActivity" >
    update operate_activity
    set active_name = #{activeName,jdbcType=VARCHAR},
      pic_code = #{picCode,jdbcType=VARCHAR},
      pic_id = #{picId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      access_condition = #{accessCondition,jdbcType=INTEGER},
      open_state = #{openState,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      app_type = #{appType,jdbcType=INTEGER},
      send_url = #{sendUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      founder = #{founder,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      active_content = #{activeContent,jdbcType=LONGVARCHAR}
    where activity_id = #{activityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxhalo.lmb.domain.OperateActivity" >
    update operate_activity
    set active_name = #{activeName,jdbcType=VARCHAR},
      pic_code = #{picCode,jdbcType=VARCHAR},
      pic_id = #{picId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      access_condition = #{accessCondition,jdbcType=INTEGER},
      open_state = #{openState,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      app_type = #{appType,jdbcType=INTEGER},
      send_url = #{sendUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      founder = #{founder,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where activity_id = #{activityId,jdbcType=INTEGER}
  </update>
  
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from operate_activity
    <if test="where != null and where != ''" >
      where ${where}
    </if>      
  </select>
  <select id="findWhereList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operate_activity
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>     
  </select>
  <select id="findPagerList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operate_activity
    <if test="where != null and where != ''" >
      where ${where}
    </if> 
    <if test="order != null and order != ''" >
      order by ${order}
    </if>
    <if test="length != null and length != -1" >
      limit ${start},${length}
    </if>     
  </select>
</mapper>